{"version":3,"sources":["Footer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Footer","Grid","container","justify","spacing","item","xs","Box","pt","align","Typography","variant","Tooltip","title","Link","underline","href","target","src","alt","width","height","App","props","useState","currentUrl","setCurrentUrl","loading","setLoading","expanded","setExpanded","stanceNames","scorevalue","setScorevalue","React","open","setOpen","errorMsg","setErrorMsg","error","setError","classes","makeStyles","theme","root","display","flexDirection","content","flex","toolbar","minHeight","backgroundColor","paper","padding","textAlign","color","palette","text","secondary","paperMax","light","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","useStyles","useEffect","chrome","tabs","query","active","currentWindow","currenturl","URL","url","toString","detectFakeNews","a","axios","get","params","then","res","console","log","data","value_list","split","values","catch","message","setTimeout","handleHelpDialogClose","displayScoreValue","map","name","index","scorevaluearray","Number","maximum","Math","max","apply","currNumber","Paper","className","p","Divider","toFixed","AlertError","Alert","severity","HelpDialog","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","id","IconButton","onClick","pl","AppBar","position","Toolbar","link","Icon","Container","fixed","Card","m","CardActions","disableSpacing","clsx","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","CardContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"+eA4BeA,MArBf,WACC,OACC,6BACC,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACzC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAM,SACjB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,aAApB,mBAGF,kBAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACM,EAAA,EAAD,CAASC,MAAM,qBACf,kBAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,KAAK,oBAAoBC,OAAO,UACtD,kBAACV,EAAA,EAAD,CAAKE,MAAM,QAAO,yBAAKS,IAAI,8BAA8BC,IAAI,GAAGC,MAAM,QAAQC,OAAO,gBCqT7EC,MAlSf,SAAaC,GAAO,IAAD,EAEmBC,mBAAS,IAF5B,mBAEVC,EAFU,KAEEC,EAFF,OAGaF,oBAAS,GAHtB,mBAGVG,EAHU,KAGDC,EAHC,OAIeJ,oBAAS,GAJxB,mBAIVK,EAJU,KAIAC,EAJA,OAKqBN,mBAAS,CAAC,QAAS,WAAY,UAAW,cAL/D,mBAKVO,EALU,aAMmBP,mBAAS,KAN5B,mBAMVQ,EANU,KAMEC,EANF,OAOOC,IAAMV,UAAS,GAPtB,mBAOVW,GAPU,KAOJC,GAPI,QAQeZ,mBAAS,IARxB,qBAQVa,GARU,MAQAC,GARA,SASSd,oBAAS,GATlB,qBASVe,GATU,MASHC,GATG,MAkDXC,GAvCYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACf1B,MAAO,QACPC,OAAQ,SAEV0B,QAAU,CACRC,KAAM,GAERC,QAAS,CACPC,UAAW,OACXC,gBAAiB,cAEnBC,MAAO,CACLC,QAASV,EAAMvC,QAAQ,GACvBkD,UAAW,SACXC,MAAOZ,EAAMa,QAAQC,KAAKC,WAE5BC,SAAU,CACRN,QAASV,EAAMvC,QAAQ,GACvBkD,UAAW,SACXC,MAAOZ,EAAMa,QAAQC,KAAKC,UAC1BP,gBAAiBR,EAAMa,QAAQE,UAAUE,OAG3CC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYrB,EAAMsB,YAAYC,OAAO,YAAa,CAChDC,SAAUxB,EAAMsB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,qBAKCQ,GAGhBC,qBAAU,WACRC,OAAOC,KAAKC,MACV,CAACC,QAAQ,EAAMC,eAAe,IAC9B,SAAAH,GACE,IACMI,EADM,IAAIC,IAAIL,EAAK,GAAGM,KACLC,WACvBtD,EAAcmD,GACdI,GAAeJ,QAOnB,IAGF,IAAMI,GAAc,uCAAG,WAAOF,GAAP,SAAAG,EAAA,sEACAC,IAChBC,IAAI,uCAAwC,CACzCC,OAAQ,CACNN,IAAKA,KAGVO,MAAK,SAAAC,GAOF,GANAC,QAAQC,IAAIF,GACI,eAAZA,EAAIG,OACNF,QAAQC,IAAIF,EAAIG,MAChBlD,IAAS,GACTF,GAAYiD,EAAIG,OAEF,wBAAZH,EAAIG,UAIH,CACH,IAAMC,EAAaJ,EAAIG,KAAKE,MAAM,MAK5BC,EAAS,CAJDF,EAAW,GAAGC,MAAM,KAAK,GACtBD,EAAW,GAAGC,MAAM,KAAK,GAC1BD,EAAW,GAAGC,MAAM,KAAK,GACvBD,EAAW,GAAGC,MAAM,KAAK,IAE3CJ,QAAQC,IAAII,GACZ5D,EAAc4D,OAInBC,OAAM,SAAAvD,GACHC,IAAS,GACTF,GAAYC,EAAMwD,QAAQ,uBAC1BP,QAAQC,IAAI,gBAAiBlD,MAjChB,cAmCjByD,YAAW,WACPpE,GAAW,KACZ,KArCc,2CAAH,sDA4CdqE,GAAwB,WAC5B7D,IAAQ,IAOJ8D,GAAqBnE,EAAYoE,KAAI,SAACC,EAAMC,GAChD,IAAIC,EAAkBtE,EAAWmE,IAAII,QACjCC,EAAUC,KAAKC,IAAIC,MAAMF,KAAMH,GAC/BM,EAAaL,OAAOvE,EAAWqE,IACnC,OACE,kBAACpG,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAG6C,gBAAgB,SAChC,kBAAC0D,EAAA,EAAD,CAAOC,UAAWF,GAAcJ,EAAU/D,GAAQkB,SAAWlB,GAAQW,OACnE,kBAAC1C,EAAA,EAAD,CAAYC,QAAQ,aAAayF,GACjC,kBAAC7F,EAAA,EAAD,CAAKwG,EAAG,GAAG,kBAACC,EAAA,EAAD,QACE,IAAXJ,GAAgBK,QAAQ,GAH5B,SASN,SAASC,KACP,OACE,6BACG3E,GACC,kBAAChC,EAAA,EAAD,KACF,kBAAC4G,EAAA,EAAD,CAAOC,SAAS,SACb/E,KAIF,kBAAC9B,EAAA,EAAD,OAOP,SAAS8G,KACP,OACA,6BACI,kBAACC,EAAA,EAAD,CACInF,KAAMA,GACNoF,QAAStB,GACTuB,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAmBC,GAAG,4BAClB,kBAAC3H,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACE,EAAA,EAAD,CAAY4C,UAAU,SAAS3C,QAAQ,MAAvC,WAGF,kBAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAKE,MAAM,SACT,kBAACoH,EAAA,EAAD,CAAYC,QAAS7B,IAAuB,kBAAC,IAAD,UAIlD,kBAAC1F,EAAA,EAAD,CAAKwH,GAAI,GACP,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,aAApB,0FAIF,kBAACJ,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAApB,WAEF,kBAACJ,EAAA,EAAD,CAAKwH,GAAI,GACP,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,aAApB,gHAGA,kBAACJ,EAAA,EAAD,CAAKwH,GAAI,GACP,kBAACrH,EAAA,EAAD,WAAe,4CAAf,2CACA,kBAACA,EAAA,EAAD,WAAe,+CAAf,8CACA,kBAACA,EAAA,EAAD,WAAe,+CAAf,sFACA,kBAACA,EAAA,EAAD,WAAe,+CAAf,sEAatB,OACE,yBAAKoG,UAAWrE,GAAQG,MACpB,yBAAKkE,UAAWrE,GAAQM,SACtB,kBAACiF,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASpB,UAAWrE,GAAQQ,SAC5B,kBAACnC,EAAA,EAAD,CAAMyC,MAAM,UAAUvC,KAAK,IAAI8F,UAAWrE,GAAQ0F,KAAMpH,UAAU,QAChE,kBAACR,EAAA,EAAD,CAAKsC,QAAQ,OAAOC,cAAc,OAChC,kBAACvC,EAAA,EAAD,KAAM,kBAAC6H,EAAA,EAAD,KAAM,yBAAKjH,IAAI,GAAGD,IAAI,aAAaE,MAAM,OAAOC,OAAO,WAC7D,kBAACd,EAAA,EAAD,CAAKwH,GAAI,EAAGvH,GAAI,KAChB,kBAACE,EAAA,EAAD,CACEC,QAAQ,YACRkC,QAAQ,SAFV,yBAUN,kBAACwF,EAAA,EAAD,CAAWC,OAAK,GACb3G,EACC,kBAACpB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC0G,GAAD,MACA,kBAACjH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GAC1C,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAM,SAA/B,sBAGF,kBAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GACb,kBAACuH,EAAA,EAAD,CAAYtE,MAAM,UAAUuE,QA7Hf,WAC3B1F,IAAQ,KA6HU,kBAAC,IAAD,SAIN,kBAACiF,GAAD,MACA,kBAAC9G,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,QAAS,GACvC8F,KAGL,kBAAC3F,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC+H,EAAA,EAAD,CAAMC,EAAG,GACT,kBAACC,EAAA,EAAD,CAAaC,gBAAc,EAACF,EAAG,EAAGtF,UAAU,QAC1C,kBAACxC,EAAA,EAAD,CAAYC,QAAQ,QAAQF,MAAM,UAAlC,eACA,kBAACoH,EAAA,EAAD,CACEf,UAAW6B,YAAKlG,GAAQoB,OAAT,eACZpB,GAAQ4B,WAAaxC,IAExBiG,QAzIM,WACxBhG,GAAaD,IAyIK+G,gBAAe/G,EACfgH,aAAW,YAEX,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CAAUC,GAAIlH,EAAUmH,QAAQ,OAAOC,eAAa,GAChD,kBAACC,EAAA,EAAD,KACE,kBAACpI,EAAA,EAAD,CAAMC,UAAU,OAAOC,KAAMS,GAC7B,kBAACf,EAAA,EAAD,CAAYC,QAAQ,SAASc,SAUrC,kBAACxB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACtB,kBAACI,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAM,UAAS,kBAACC,EAAA,EAAD,mDAC3B,kBAACH,EAAA,EAAD,CAAKC,GAAI,EAAGC,MAAM,UAAS,yBAAKS,IAAI,2BAA2BC,IAAI,oBAOjF,kBAAC,EAAD,QCvTcgI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzE,MAAK,SAAA0E,GACJA,EAAaC,gBAEdnE,OAAM,SAAAvD,GACLiD,QAAQjD,MAAMA,EAAMwD,a,6EEzI5BmE,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.9e64a6c2.chunk.js","sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction Footer() {\n\treturn(\n\t\t<div>\n\t\t\t<Grid container justify=\"center\" spacing={1}>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<Box pt={0} align=\"right\">\n\t\t\t\t\t\t<Typography variant=\"subtitle1\">Powered by : </Typography> \n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t  <Tooltip title=\"https://nunet.io/\">\n\t\t\t\t  <Link underline=\"none\" href=\"https://nunet.io/\" target=\"_blank\">\n\t\t\t\t  \t<Box align=\"left\"><img src=\"./assets/img/nunet-logo.svg\" alt=\"\" width=\"100px\" height=\"30px\" /></Box>\n\t\t\t\t  </Link>\t\n\t\t\t\t  </Tooltip>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default Footer;","/* global chrome */\n\nimport React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText  from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport HelpIcon from '@material-ui/icons/Help';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\n\n\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport { makeStyles} from '@material-ui/core';\n\nimport Footer from './Footer.js';\n\nfunction App(props){\n\n  const [currentUrl, setCurrentUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const [stanceNames, setStanceNames] = useState([\"Agree\", \"Disagree\", \"Discuss\", \"Unrelated\"]);\n  const [scorevalue, setScorevalue] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [error, setError] = useState(false);\n    \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '500px',\n      height: '580px',\n    },\n    content : {\n      flex: 1,\n    },\n    toolbar: {\n      minHeight: '12px',\n      backgroundColor: 'light-blue'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    paperMax: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.secondary.light,\n    },\n\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    }\n    \n\n  }));\n  const classes = useStyles();\n\n  \n  useEffect(() => {\n    chrome.tabs.query(\n      {active: true, currentWindow: true},\n      tabs => {\n        const url = new URL(tabs[0].url);\n        const currenturl = url.toString();\n        setCurrentUrl(currenturl);\n        detectFakeNews(currenturl);\n    });\n    // const currenturl = \"https://www.digitalocean.com/community/tutorials/react-axios-react\";\n    // //const currenturl = \"chrome://newtab/\"\n    // setCurrentUrl(currenturl);\n    // detectFakeNews(currenturl);\n    \n  },[]);\n\n\n  const detectFakeNews = async (url) => {\n      const data = await axios\n        .get('http://195.201.197.25:7005/get_score', {\n            params: {\n              url: url          \n            },\n          })\n        .then(res => {\n            console.log(res);\n            if (res.data == \"Invalid Url\"){\n              console.log(res.data);\n              setError(true);\n              setErrorMsg(res.data);\n            }\n            if (res.data == \"Server Not Available\"){\n\n            }\n\n            else {\n              const value_list = res.data.split('\\n');\n              const agree = value_list[0].split(':')[1];\n              const disagree = value_list[1].split(':')[1];\n              const discuss = value_list[2].split(':')[1];\n              const unrelated = value_list[3].split(':')[1];\n              const values = [agree, disagree, discuss, unrelated]\n              console.log(values);\n              setScorevalue(values);\n            }\n            \n          })\n        .catch(error => {\n            setError(true);\n            setErrorMsg(error.message+\": API Not Available\");\n            console.log('Error Occured', error);\n        });\n        setTimeout(function() {\n            setLoading(true);\n        }, 3000);\n    \n  }\n\n  const handleHelpDialogOpen = () => {\n    setOpen(true);\n  }\n  const handleHelpDialogClose = () => {\n    setOpen(false);\n  }\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  }\n  \n  const displayScoreValue = (stanceNames.map((name, index) => {\n    var scorevaluearray = scorevalue.map(Number); // change string array to integer array\n    var maximum = Math.max.apply(Math, scorevaluearray) // get the maximum value\n    var currNumber = Number(scorevalue[index]); // the current value\n    return(\n      <Grid item xs={3} backgroundColor='green'>\n        <Paper className={currNumber == maximum ? classes.paperMax : classes.paper} >\n          <Typography variant=\"subtitle1\">{name}</Typography>\n          <Box p={1}><Divider /></Box>\n          {(currNumber*100).toFixed(2)}%\n        </Paper>\n      </Grid>\n    );\n  }));\n\n  function AlertError() {\n    return(\n      <div>\n        {error ? (\n          <Box>\n        <Alert severity=\"error\">\n          {errorMsg}\n        </Alert>\n        </Box>\n        ) :\n        (<Box></Box>)       \n          }\n        \n      </div>\n    )\n  }\n\n  function HelpDialog() {\n    return (\n    <div>\n        <Dialog\n            open={open}\n            onClose={handleHelpDialogClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n              \n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Grid container>\n                      <Grid item xs={6}>\n                        <Box pt={3}>\n                        <Typography textAlign=\"bottom\" variant=\"h6\">Input</Typography>\n                        </Box>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Box align=\"right\">\n                          <IconButton onClick={handleHelpDialogClose}><CloseIcon /></IconButton>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                    <Box pl={3}>\n                      <Typography variant=\"subtitle1\">\n                        A headline and a body text - either from the same news or from two different articles\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"h6\">Output</Typography>\n                    </Box>\n                    <Box pl={3}>\n                      <Typography variant=\"subtitle1\">\n                        Classify the stance of the body text relative to the claim made in the headline into one of four categories:\n                      </Typography>\n                      <Box pl={2}>\n                        <Typography>1. <strong>Agrees: </strong>The body text agrees with the headline.</Typography>\n                        <Typography>2. <strong>Disagrees: </strong>The body text disagrees with the headline.</Typography>\n                        <Typography>3. <strong>Discusses: </strong>The body text discuss the same topic as the headline, but doesnot take a position.</Typography>\n                        <Typography>4. <strong>Unrelated: </strong>The body text discusses a different topic than the headline.</Typography>   \n                      </Box>\n                     </Box>\n                    \n                </DialogContentText>\n            </DialogContent>\n\n        </Dialog>\n\n    </div>\n    );\n}\n  \n  return (\n    <div className={classes.root} >\n        <div className={classes.content}>\n          <AppBar position=\"static\">\n            <Toolbar className={classes.toolbar} >\n            <Link color=\"inherit\" href=\"#\" className={classes.link} underline=\"none\">\n              <Box display=\"flex\" flexDirection=\"row\">\n                <Box ><Icon><img alt=\"\" src=\"/logo1.png\" width=\"30px\" height=\"30px\" /></Icon></Box>\n                <Box pl={1} pt={0.25} >\n                <Typography \n                  variant=\"subtitle1\"\n                  display=\"block\"\n                >FakeNewsDetector\n                </Typography>\n                </Box>\n              </Box>\n            </Link>\n            </Toolbar>\n          </AppBar>\n          <Container fixed >\n            {loading ? (\n              <Box pt={3}>\n                <AlertError />\n                <Grid container justify=\"center\" spacing={1}>\n                <Grid item xs={6} >\n                  <Box pt={1}>\n                  <Typography variant=\"h6\" align=\"right\">Stance Detection</Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={6} >\n                  <IconButton color=\"primary\" onClick={handleHelpDialogOpen}>\n                      <HelpIcon />\n                </IconButton>\n                </Grid>\n                </Grid>\n                <HelpDialog />\n                <Box pt={2}>\n                  <Grid container justify=\"center\" spacing={2}>\n                    {displayScoreValue}\n                  </Grid>\n                </Box>\n                <Box pt={5}>\n                  <Card m={1}>\n                  <CardActions disableSpacing m={1} minHeight=\"10px\">\n                    <Typography variant=\"body2\" align=\"center\">Article Url</Typography>\n                    <IconButton \n                      className={clsx(classes.expand, {\n                        [classes.expandOpen]: expanded,\n                      })}\n                      onClick={handleExpandClick}\n                      aria-expanded={expanded}\n                      aria-label=\"show-url\"\n                    >\n                      <ExpandMoreIcon />\n                    </IconButton>\n                  </CardActions>\n                  <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                      <CardContent>\n                        <Link underline=\"none\" href={currentUrl}>\n                        <Typography variant=\"body2\">{currentUrl}</Typography>\n                        </Link>\n                      </CardContent>\n\n                  </Collapse>\n                  </Card>\n                       \n                </Box>\n              </Box>\n              ) : (\n                <Grid container justify=\"center\">\n                  <Box>\n                    <Box pt={5} align=\"center\"><Typography>Stance detection started, please wait ...</Typography></Box>\n                    <Box pt={3} align=\"center\"><img src=\"./assets/img/loading.gif\" alt=\"loading...\" /></Box>\n                  </Box>\n                </Grid>\n              )\n            }  \n          </Container>\n        </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}